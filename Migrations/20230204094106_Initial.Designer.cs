// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SociologySimulator.Models;

#nullable disable

namespace SociologySimulator.Migrations
{
    [DbContext(typeof(SocialContext))]
    [Migration("20230204094106_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("SociologySimulator.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MindId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MindId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Josh",
                            LastName = "Moody",
                            MindId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Matthew",
                            LastName = "Moody",
                            MindId = 101
                        });
                });

            modelBuilder.Entity("SociologySimulator.Models.Closure", b =>
                {
                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChildId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Depth")
                        .HasColumnType("INTEGER");

                    b.HasKey("ParentId", "ChildId");

                    b.HasIndex("ChildId");

                    b.ToTable("Closures");

                    b.HasData(
                        new
                        {
                            ParentId = 1,
                            ChildId = 1,
                            Depth = 0
                        },
                        new
                        {
                            ParentId = 2,
                            ChildId = 2,
                            Depth = 0
                        },
                        new
                        {
                            ParentId = 3,
                            ChildId = 3,
                            Depth = 0
                        },
                        new
                        {
                            ParentId = 4,
                            ChildId = 4,
                            Depth = 0
                        },
                        new
                        {
                            ParentId = 5,
                            ChildId = 5,
                            Depth = 0
                        },
                        new
                        {
                            ParentId = 6,
                            ChildId = 6,
                            Depth = 0
                        },
                        new
                        {
                            ParentId = 1,
                            ChildId = 2,
                            Depth = 1
                        },
                        new
                        {
                            ParentId = 1,
                            ChildId = 3,
                            Depth = 1
                        },
                        new
                        {
                            ParentId = 2,
                            ChildId = 4,
                            Depth = 1
                        },
                        new
                        {
                            ParentId = 2,
                            ChildId = 5,
                            Depth = 1
                        },
                        new
                        {
                            ParentId = 3,
                            ChildId = 6,
                            Depth = 1
                        },
                        new
                        {
                            ParentId = 1,
                            ChildId = 4,
                            Depth = 2
                        },
                        new
                        {
                            ParentId = 1,
                            ChildId = 5,
                            Depth = 2
                        },
                        new
                        {
                            ParentId = 1,
                            ChildId = 6,
                            Depth = 2
                        },
                        new
                        {
                            ParentId = 101,
                            ChildId = 101,
                            Depth = 0
                        });
                });

            modelBuilder.Entity("SociologySimulator.Models.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Nodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Needs"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Physical Needs",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Social Needs",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Water",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Food",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Love",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 101,
                            Name = "Values"
                        });
                });

            modelBuilder.Entity("SociologySimulator.Models.Tag", b =>
                {
                    b.Property<int>("NodeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("NodeId", "Name");

                    b.HasIndex("TypeId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            NodeId = 4,
                            Name = "Importance",
                            TypeId = 2,
                            Value = "0.999"
                        },
                        new
                        {
                            NodeId = 4,
                            Name = "Status",
                            TypeId = 2,
                            Value = "0.88"
                        },
                        new
                        {
                            NodeId = 5,
                            Name = "Importance",
                            TypeId = 2,
                            Value = "0.97"
                        },
                        new
                        {
                            NodeId = 5,
                            Name = "Status",
                            TypeId = 2,
                            Value = "0.77"
                        },
                        new
                        {
                            NodeId = 101,
                            Name = "Value",
                            TypeId = 2,
                            Value = "0.51"
                        });
                });

            modelBuilder.Entity("SociologySimulator.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "string"
                        },
                        new
                        {
                            Id = 2,
                            Name = "float"
                        },
                        new
                        {
                            Id = 3,
                            Name = "int"
                        });
                });

            modelBuilder.Entity("SociologySimulator.Models.Character", b =>
                {
                    b.HasOne("SociologySimulator.Models.Node", "Mind")
                        .WithMany()
                        .HasForeignKey("MindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mind");
                });

            modelBuilder.Entity("SociologySimulator.Models.Closure", b =>
                {
                    b.HasOne("SociologySimulator.Models.Node", "Child")
                        .WithMany()
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SociologySimulator.Models.Node", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SociologySimulator.Models.Node", b =>
                {
                    b.HasOne("SociologySimulator.Models.Node", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SociologySimulator.Models.Tag", b =>
                {
                    b.HasOne("SociologySimulator.Models.Node", "Node")
                        .WithMany("Tags")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SociologySimulator.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Node");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("SociologySimulator.Models.Node", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
